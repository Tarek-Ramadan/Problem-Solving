# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if not head: return False
        listo =set()
        while head:
            if head in listo:
                return True
            listo.add(head)
            head = head.next
            ################### second sol ##################
#class Solution:
#     def hasCycle(self, head):
#         slow = fast = head
#         while fast and fast.next:
#             fast = fast.next.next
#             slow = slow.next
#             if slow == fast: return True
#         return False
